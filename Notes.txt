TO DO 8-24-22
[x] meet with Sam and Carlos
[x] give backend updated endpoint preferences
[ ] update MyGames axios requests to include all 5 options after BE is ready 
[ ] add modal to NewGamesList to render info from game as it's clicked 
    [ ] button first 
    [ ] try as entire clickable card 
    [ ] setCurrentGame on click
    [ ] show game info 
        [ ] display user
        [ ] date, time, location
        [ ] button labels
        [ ] button functions
    ?? after modal closes we'll need to send all the API requests again to get updated information         






Updating MyGames to reflect new UI 8-22-22

[ ] conditionally render icon 
[ ] conditionally render background color 
[ ] cond. render buttons and their actions 
[ ] sort games associated with alerts at the top 
[ ] game detail page (no longer modal)
[ ] modal holding expanded info, but not all all info? 
[ ] make a new component just to render data? 


[ ] check that a game has a type or title or something that icon can render from. if not, talk to BE 
    idea: 
        make all API requests and put into 2 arrays to pass into gamesList and get rendered 
            a: "!" pending POVHost games arranged soonest to farthest
            b: confirmed, open, POVGuest games soonest to farthest    
        - if open, check for guests
        - if username is in guests, it counts as "?" icon and gets put in the array 
        - if username is host, it counts as "!" and gets put in the array to be dealt with first 

[ ] buttons: 
    confirmed game: cancel this game 
    pendingPOVhost: accept or reject - this will be it's own array/component
    pendingPOVGuest: cancel this request 
    open: edit this game, cancel this game 

[ ] info displayed: 
    [ ] location  
    [ ] date
    [ ] time
    [ ] singles/doubles
    [ ] competitive/casual
    [ ] other player - how am I going to make that work???? 
        if username==host ternary? 


idea: make a url specific to POVHost game details that can be accessed from clicking on a game in the gamelist and also from the notifications page (would be set up getting game details from params like OpenGameDetail)



Conversation with Amy: 
-see Amy's react trivia code for reforming API object into object you want it to be 
- don't have an accept/reject/cancel button on the game, you just have the whole thing be clickable to game detail that will do the logic of which button to click 
- 




Each game card: add onClick to the Box (not linkoverlay anymore)
onClick opens Modal, Modal will render information all on the same page (not a new component)



Survey: 
Button onClick(()=>{setRequestOne({user: <uservalue>, response: <response>})})
axios.post('url', body: requestOne)